-- database: ./db.db

-- 1
CREATE TABLE IF NOT EXISTS users(
    username TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    surname TEXT NOT NULL,
    email TEXT NOT NULL    
);


-- 2
CREATE TABLE IF NOT EXISTS restaurants(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    address TEXT NOT NULL,
    capacity INTEGER NOT NULL,
    culinary_experience INTEGER NOT NULL, -- 0 if it has not the culinary_experience, 1 otherwise
    phone_number TEXT NOT NULL
);

-- 3
CREATE TABLE IF NOT EXISTS table_reservations(
    id_restaurant INTEGER NOT NULL,
    username TEXT NOT NULL,
    data TEXT NOT NULL, 
    hour TEXT NOT NULL,
    number_people INTEGER NOT NULL,
    special_request TEXT,
    FOREIGN KEY(id_restaurant) REFERENCES restaurants(id) ON DELETE CASCADE,
    FOREIGN KEY(username) REFERENCES users(users) ON DELETE CASCADE,
    PRIMARY KEY(username, id_restaurant, data, hour)
);

-- 4
CREATE TABLE IF NOT EXISTS culinary_experience_reservations(
    id_restaurant INTEGER NOT NULL,
    username TEXT NOT NULL,
    data TEXT NOT NULL, 
    number_people INTEGER NOT NULL,
    language_selected TEXT NOT NULL,
    FOREIGN KEY(id_restaurant) REFERENCES restaurants(id) ON DELETE CASCADE,
    FOREIGN KEY(username) REFERENCES users(users) ON DELETE CASCADE,
    PRIMARY KEY(username, id_restaurant, data)
);

-- 5
CREATE TABLE IF NOT EXISTS type_deals(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

-- 6
CREATE TABLE IF NOT EXISTS deals_restaurants(
    id_deal INTEGER NOT NULL,
    id_restaurant INTEGER NOT NULL,
    hour_start_deal TEXT NOT NULL,
    hour_end_deal TEXT NOT NULL,
    FOREIGN KEY(id_restaurant) REFERENCES restaurants(id) ON DELETE CASCADE,
    FOREIGN KEY(id_deal) REFERENCES type_deals(id) ON DELETE CASCADE,
    PRIMARY KEY(id_restaurant, id_deal)
);


-- 7
CREATE TABLE IF NOT EXISTS culinary_experience(
    id INTEGER PRIMARY KEY AUTOINCREMENT, -- id autoincrement 
    id_restaurant INTEGER NOT NULL,
    description TEXT NOT NULL,
    include_1 TEXT,
    include_2 TEXT,
    include_3 TEXT,
    price INTEGER NOT NULL,
    meeting_point TEXT NOT NULL,
    start_hour TEXT NOT NULL,
    end_hour TEXT NOT NULL,
    UNIQUE (id, id_restaurant), -- Chiave composta univoca
    FOREIGN KEY(id_restaurant) REFERENCES restaurants(id) ON DELETE CASCADE
);

--8 
CREATE TABLE IF NOT EXISTS languages(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

-- 9
CREATE TABLE IF NOT EXISTS culinary_experience_languages(
    id_language INTEGER NOT NULL,
    id_culinary_experience INTEGER NOT NULL,
    FOREIGN KEY(id_language) REFERENCES languages(id) ON DELETE CASCADE,
    FOREIGN KEY(id_culinary_experience) REFERENCES culinary_experience(id) ON DELETE CASCADE
    PRIMARY KEY(id_language, id_culinary_experience)
);

-- 10
CREATE TABLE IF NOT EXISTS ingredients(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

-- 11
CREATE TABLE IF NOT EXISTS allergens(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

-- 12
CREATE TABLE IF NOT EXISTS categoryies_dishes( --startes, main course, second course, dessert, etc
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

-- 13
CREATE TABLE IF NOT EXISTS dishes(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    price INTEGER NOT NULL,
    id_category INTEGER NOT NULL,
    UNIQUE(id, id_category),
    FOREIGN KEY(id_category) REFERENCES categories_dishes(id) ON DELETE CASCADE
);

-- 14
CREATE TABLE IF NOT EXISTS dishes_ingredients(
    id_dish INTEGER NOT NULL,
    id_ingredient INTEGER NOT NULL,
    FOREIGN KEY(id_dish) REFERENCES dishes(id) ON DELETE CASCADE,
    FOREIGN KEY(id_ingredient) REFERENCES ingredients(id) ON DELETE CASCADE,
    PRIMARY KEY(id_dish, id_ingredient)
);

-- 15
CREATE TABLE IF NOT EXISTS dishes_allergens(
    id_dish INTEGER NOT NULL,
    id_allergen INTEGER NOT NULL,
    FOREIGN KEY(id_dish) REFERENCES dishes(id) ON DELETE CASCADE,
    FOREIGN KEY(id_allergen) REFERENCES allergens(id) ON DELETE CASCADE,
    PRIMARY KEY(id_dish, id_allergen)
);


-- 16
CREATE TABLE days_of_week (
    id_day INTEGER PRIMARY KEY,
    day_name TEXT NOT NULL
);


-- 17
CREATE TABLE restaurant_closures (
    id_restaurant INTEGER NOT NULL,
    id_day INTEGER NOT NULL,
    FOREIGN KEY (id_restaurant) REFERENCES restaurants(id) ON DELETE CASCADE,
    FOREIGN KEY (id_day) REFERENCES days_of_week(id_day) ON DELETE CASCADE,
    PRIMARY KEY (id_restaurant, id_day)
);